<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Web Development on Ardenov Blog</title><link>https://eugeniusw.github.io/posts/web-development/</link><description>Recent content in Web Development on Ardenov Blog</description><language>en</language><copyright>© 2019 - 2025 Ardenov Blog. All rights reserved.</copyright><atom:link href="https://eugeniusw.github.io/posts/web-development/rss.xml" rel="self" type="application/rss+xml"/><item><title>Essential Audit Fields to Include in Your Database Tables</title><link>https://eugeniusw.github.io/posts/web-development/2025-01-24-essential-audit-fields-to-include-in-your-database-tables/</link><pubDate>Thu, 23 Jan 2025 00:00:00 +0000</pubDate><guid>https://eugeniusw.github.io/posts/web-development/2025-01-24-essential-audit-fields-to-include-in-your-database-tables/</guid><description>When designing your database tables, it's crucial to include audit fields to track the creation, modification, and deletion of records. These audit fields provide essential insights into data changes, improve accountability, and help meet regulatory or compliance standards. In this article, we'll cover the key audit fields you should consider adding to your tables, including timestamps, user tracking, and versioning, ensuring a transparent and maintainable record lifecycle.</description><media:content url="https://eugeniusw.github.io/posts/web-development/2025-01-24-essential-audit-fields-to-include-in-your-database-tables/images/ythumb.jpg" medium="image"/><dc:creator>Eugenius Wahyudiarto</dc:creator><category>database</category><category>sql</category><category>web-dev</category></item><item><title>Quickstart Svelte - Setting Up and Running a Development Server</title><link>https://eugeniusw.github.io/posts/web-development/quickstart/quickstart-svelte-setting-up-and-running-a-development-server/</link><pubDate>Thu, 28 Nov 2024 00:00:00 +0000</pubDate><guid>https://eugeniusw.github.io/posts/web-development/quickstart/quickstart-svelte-setting-up-and-running-a-development-server/</guid><description>Quickstart setting up a Svelte project and run its development server using Docker. This guide explains configuring docker-compose.yml for initializing a Svelte + Vite project and running the dev server with hot-reloading.</description><media:content url="https://eugeniusw.github.io/posts/web-development/quickstart/quickstart-svelte-setting-up-and-running-a-development-server/images/ythumb.jpg" medium="image"/><dc:creator>Eugenius Wahyudiarto</dc:creator><category>web-dev</category><category>js</category><category>svelte</category><category>vite</category><category>docker</category></item><item><title>The Future of Web Apps — "Offline-First" and "Peer-to-Peer" Design</title><link>https://eugeniusw.github.io/posts/web-development/2024-09-23-the-future-of-web-apps/</link><pubDate>Sun, 22 Sep 2024 00:00:00 +0000</pubDate><guid>https://eugeniusw.github.io/posts/web-development/2024-09-23-the-future-of-web-apps/</guid><description>As the web continues to evolve, developers are seeking new ways to enhance the performance, privacy, and resilience of web applications. Two paradigms emerging in this area are "offline-first" and "peer-to-peer" (P2P) designs.</description><media:content url="https://eugeniusw.github.io/posts/web-development/2024-09-23-the-future-of-web-apps/images/ythumb.jpg" medium="image"/><dc:creator>Eugenius Wahyudiarto</dc:creator><category>web-dev</category><category>peer-to-peer</category><category>p2p</category><category>multi-peer</category><category>offline-first</category><category>web3</category></item><item><title>Creating a Synchronized Scrolling Two-Column Layout</title><link>https://eugeniusw.github.io/posts/web-development/creating-a-synchronized-scrolling-two-column-layout/</link><pubDate>Tue, 06 Aug 2024 00:00:00 +0000</pubDate><guid>https://eugeniusw.github.io/posts/web-development/creating-a-synchronized-scrolling-two-column-layout/</guid><description>Learn how to create a synchronized scrolling two-column layout using HTML, CSS, and JavaScript. This tutorial will walk you through building a responsive design where the main content scrolls vertically and the adjacent images scroll horizontally in parallel.</description><media:content url="https://eugeniusw.github.io/posts/web-development/creating-a-synchronized-scrolling-two-column-layout/images/thumb.jpg" medium="image"/><dc:creator>Eugenius Wahyudiarto</dc:creator><category>web-dev</category><category>html</category><category>css</category><category>js</category><category>scroll</category></item></channel></rss>